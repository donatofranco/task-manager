// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

//Definimos el modelo de usuario
model User {
  id         Int        @id @default(autoincrement())
  email      String     @unique
  password   String
  createdAt  DateTime   @default(now())
  tasks      Task[]     // Aquí agregas la relación inversa a Task
  categories Category[] // Relación inversa a Category
}

//Definimos el modelo para las categorías
model Category {
  id          Int      @id @default(autoincrement())
  name        String
  color       String?   // Opcional: para asignar colores a las categorías
  createdAt   DateTime @default(now())
  
  user        User     @relation(fields: [userId], references: [id])
  userId      Int
  tasks       Task[]
}

//Definimos el modelo para la tarea
//Cada tarea pertenece a un User (relación userId).
//description es opcional.
//Prisma creará automáticamente las claves foráneas.
model Task {
  id          Int      @id @default(autoincrement())
  title       String
  description String?
  completed   Boolean  @default(false)
  createdAt   DateTime @default(now())
  updatedAt   DateTime @updatedAt

  user        User     @relation(fields: [userId], references: [id])
  userId      Int
  
  category    Category? @relation(fields: [categoryId], references: [id])
  categoryId  Int?
}